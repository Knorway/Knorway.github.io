{"pageProps":{"data":{"title":"리액트 라우터 v6를 적용해보자","author":"김노르웨이","publishedAt":"2021-02-06","tags":"React","summary":"아래의 코드는 중첩되는 하위 경로와 매치되지 않는 경로들에 대한 정보를 Routes 컴포넌트 안에서 전부 중첩으로 처리 하는 예시이다. 가독성이 매우 좋으며 각각의 하위 경로..."},"content":"\n아래의 코드는 하위 경로와 매치되지 않는 경우에 대한 정보를 Routes 컴포넌트 안에서 전부 중첩으로 처리 하는 예시이다.\n가독성이 매우 좋으며 각각의 하위 경로의 레이아웃 또한 쉽게 정해줄 수 있다. \n\n<br />\n\n*`src/App.js`*\n```javascript\nconst App = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<MainLayout />}>\n        <Route path=\"/\" element={<Navigate to=\"/app/dashboard\" />} />\n        <Route path=\"/login\" element={<LoginView />} />\n        <Route path=\"/404\" element={<NotFoundView />} />\n        <Route path=\"*\" element={<Navigate to=\"/app/dashboard\" />} />\n      </Route>\n      <Route path=\"app\" element={<DashboardLayout />}>\n        <Route path=\"/dashboard\" element={<DashboardView />} />\n        <Route path=\"stocks\">\n          <Route path=\"/\" element={<StockListView />} />\n          <Route path=\":id\" element={<StockDetailView />} />\n        </Route>\n        <Route path=\"/sales\" element={<SaleListView />} />\n        <Route path=\"/settings\" element={<SettingsView />} />\n        <Route path=\"*\" element={<Navigate to=\"/404\" />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default App;\n````"},"__N_SSG":true}